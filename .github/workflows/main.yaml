name: GitHub Actions Workflows

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  IMAGE_NAME: "ghcr.io/${{ github.repository }}"
  REDIS_OM_URL: ${{ secrets.REDIS_OM_URL }}

jobs:
  build:
    name: Build and Push Docker Image
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Normalize Repository Name
        run: |
          IMAGE_NAME_LOWER=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE_NAME=${IMAGE_NAME_LOWER}" >> $GITHUB_ENV

      - name: Set Docker Image Tag
        run: echo "IMAGE_TAG=${{ github.event.release.tag_name || 'latest' }}" >> $GITHUB_ENV

      - name: Debug Environment Variables
        run: |
          echo "IMAGE_NAME: $IMAGE_NAME"
          echo "IMAGE_TAG: $IMAGE_TAG"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
            ${{ env.IMAGE_NAME }}:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-args: |
            REDIS_OM_URL=${{ secrets.REDIS_OM_URL }}

  scan:
    name: Scan Docker Image
    runs-on: ubuntu-latest
    permissions:
      security-events: write
    needs: build

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Trivy Vulnerability Scanner
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: latest

      # Run Trivy Vulnerability Scanner on the Docker Image
      - name: Run Trivy Vulnerability Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          format: table,sarif
          severity: LOW,MEDIUM,HIGH,CRITICAL
          output: trivy-results.sarif, trivy-results.txt
          skip-setup-trivy: true

      - name: Upload SARIF to GitHub Security Tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: trivy-results.sarif

      - name: Upload Trivy Table Results
        uses: actions/upload-artifact@v3
        with:
          name: trivy-results
          path: trivy-results.txt